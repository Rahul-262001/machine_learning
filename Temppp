import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your dataset
data = pd.read_csv('your_dataset.csv')

# Split the data into features (X) and target variable (y)
X = data[['invoice_date', 'netamt']]  # You may need to preprocess 'invoice_date' to extract useful features
y = data['sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
accuracy = 1 - (mse / y_test.mean())  # This is just one way to calculate accuracy

print("Accuracy:", accuracy)




import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your dataset
data = pd.read_csv('your_dataset.csv')

# Convert the 'invoice_date' column to datetime
data['invoice_date'] = pd.to_datetime(data['invoice_date'])

# Extract useful features from the date, like month, day, year, etc.
data['month'] = data['invoice_date'].dt.month
data['day'] = data['invoice_date'].dt.day
data['year'] = data['invoice_date'].dt.year

# Drop the original 'invoice_date' column
data.drop(columns=['invoice_date'], inplace=True)

# Split the data into features (X) and target variable (y)
X = data.drop(columns=['sales'])  
y = data['sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
accuracy = 1 - (mse / y_test.mean())  # This is just one way to calculate accuracy

print("Accuracy:", accuracy)




